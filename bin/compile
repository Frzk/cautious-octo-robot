#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir> <env-dir>

set -eo pipefail

if [[ -n "${BUILDPACK_DEBUG}" ]]
then
    set -x
fi

readonly build_dir="${1}"
readonly cache_dir="${2}"
env_dir="${3}"

readonly java_version="${JAVA_VERSION:-1.8}"
readonly webapp_runner_version="${JAVA_WEBAPP_RUNNER_VERSION:-${WEBAPP_RUNNER_VERSION:-9.0.52.1}}"

readonly base_dir="$( cd -P "$( dirname "$0" )" && pwd )"
readonly buildpack_dir="$( readlink -f "${base_dir}/.." )"


source "${buildpack_dir}/lib/common.sh"

export_env_dir "${env_dir}"


# Installs Java and webapp_runner
#
# Usage: install_webapp_runner <build_dir> <cache_dir> <java_version> <webapp_runner_version>
#
install_webapp_runner() {
    local jvm_url
    local runner_url

    local build_d
    local cache_d

    local tmp_d
    local jre_version
    local runner_version

    local cached_jvm_common
    local cached_runner

    build_d="${1}"
    cache_d="${2}"
    jre_version="${3}"
    runner_version="${4}"

    jvm_url="${JVM_COMMON_BUILDPACK:-"https://buildpacks-repository.s3.eu-central-1.amazonaws.com/jvm-common.tar.xz"}"
    runner_url="https://buildpacks-repository.s3.eu-central-1.amazonaws.com/webapp-runner-${runner_version}.jar"

    # Install JVM common tools:
    cached_jvm_common="${cache_d}/jvm-common.tar.xz"

    if [ ! -f "${cached_jvm_common}" ]
    then
        curl --location --silent --retry 6 --retry-connrefused --retry-delay 0 \
            "${jvm_url}" \
            --output "${cached_jvm_common}"
    fi

    tmp_d=$( mktemp -d jvm-common-XXXXXX ) && {
        tar --extract --xz --touch --strip-components=1 \
            --file "${cached_jvm_common}" \
            --directory "${tmp_d}"

        # Source utilities and functions:
        source "${tmp_d}/bin/util"
        source "${tmp_d}/bin/java"

        echo "java.runtime.version=${jre_version}" \
            > "${build_d}/system.properties"

        install_java_with_overlay "${build_d}"

        rm -Rf "${tmp_d}"
    }

    # Install Webapp Runner
    cached_runner="${cache_d}/webapp-runner-${runner_version}.jar"

    if [ ! -f "${cached_runner}" ]
    then
        curl --location --silent --retry 6 --retry-connrefused --retry-delay 0 \
            "${runner_url}" \
            --output "${cached_runner}" \
            || {
                echo "Unable to download webapp runner ${runner_version}. Aborting."
                exit 1
            }
    fi

    cp "${cached_runner}" "${build_d}/webapp-runner.jar"
}

readonly -f install_webapp_runner


install_webapp_runner "${build_dir}" "${cache_dir}" \
    "${java_version}" "${webapp_runner_version}"
